// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: nest-stream.proto

package nest_stream

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Cameras struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Devices []*Camera `protobuf:"bytes,1,rep,name=devices,proto3" json:"devices,omitempty"`
}

func (x *Cameras) Reset() {
	*x = Cameras{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nest_stream_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cameras) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cameras) ProtoMessage() {}

func (x *Cameras) ProtoReflect() protoreflect.Message {
	mi := &file_nest_stream_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cameras.ProtoReflect.Descriptor instead.
func (*Cameras) Descriptor() ([]byte, []int) {
	return file_nest_stream_proto_rawDescGZIP(), []int{0}
}

func (x *Cameras) GetDevices() []*Camera {
	if x != nil {
		return x.Devices
	}
	return nil
}

type Camera struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type    string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Enabled bool   `protobuf:"varint,4,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *Camera) Reset() {
	*x = Camera{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nest_stream_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Camera) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Camera) ProtoMessage() {}

func (x *Camera) ProtoReflect() protoreflect.Message {
	mi := &file_nest_stream_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Camera.ProtoReflect.Descriptor instead.
func (*Camera) Descriptor() ([]byte, []int) {
	return file_nest_stream_proto_rawDescGZIP(), []int{1}
}

func (x *Camera) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Camera) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Camera) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Camera) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

var File_nest_stream_proto protoreflect.FileDescriptor

var file_nest_stream_proto_rawDesc = []byte{
	0x0a, 0x11, 0x6e, 0x65, 0x73, 0x74, 0x2d, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6e, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76,
	0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x38, 0x0a, 0x07, 0x43,
	0x61, 0x6d, 0x65, 0x72, 0x61, 0x73, 0x12, 0x2d, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x65, 0x73, 0x74, 0x5f, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x07, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x22, 0x5a, 0x0a, 0x06, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x32, 0xf0, 0x01, 0x0a, 0x0d, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x6e, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x6d, 0x65, 0x72,
	0x61, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x14, 0x2e, 0x6e, 0x65, 0x73,
	0x74, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x73,
	0x22, 0x31, 0x92, 0x41, 0x1e, 0x1a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x20, 0x61, 0x6c, 0x6c,
	0x20, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x20, 0x63, 0x61, 0x6d, 0x65,
	0x72, 0x61, 0x73, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0a, 0x12, 0x08, 0x2f, 0x63, 0x61, 0x6d, 0x65,
	0x72, 0x61, 0x73, 0x12, 0x6f, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d,
	0x65, 0x72, 0x61, 0x12, 0x13, 0x2e, 0x6e, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x2e, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x1a, 0x13, 0x2e, 0x6e, 0x65, 0x73, 0x74, 0x5f,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x22, 0x35, 0x92,
	0x41, 0x1f, 0x1a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x20, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x20, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x1a, 0x08, 0x2f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61,
	0x73, 0x3a, 0x01, 0x2a, 0x42, 0xa8, 0x01, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x69, 0x6c, 0x62, 0x65, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x2f, 0x6e,
	0x65, 0x73, 0x74, 0x2d, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6e,
	0x65, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x92, 0x41, 0x72, 0x12, 0x70, 0x0a,
	0x0f, 0x4e, 0x65, 0x73, 0x74, 0x20, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x20, 0x41, 0x50, 0x49,
	0x22, 0x56, 0x0a, 0x0f, 0x4f, 0x77, 0x61, 0x69, 0x6e, 0x20, 0x4c, 0x6c, 0x65, 0x77, 0x65, 0x6c,
	0x6c, 0x79, 0x6e, 0x12, 0x2d, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x69, 0x6c, 0x62, 0x65, 0x72, 0x63, 0x6f,
	0x64, 0x65, 0x2f, 0x6e, 0x65, 0x73, 0x74, 0x2d, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x67,
	0x69, 0x74, 0x1a, 0x14, 0x62, 0x69, 0x6c, 0x62, 0x65, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x40, 0x67,
	0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x32, 0x05, 0x31, 0x2e, 0x30, 0x2e, 0x30, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_nest_stream_proto_rawDescOnce sync.Once
	file_nest_stream_proto_rawDescData = file_nest_stream_proto_rawDesc
)

func file_nest_stream_proto_rawDescGZIP() []byte {
	file_nest_stream_proto_rawDescOnce.Do(func() {
		file_nest_stream_proto_rawDescData = protoimpl.X.CompressGZIP(file_nest_stream_proto_rawDescData)
	})
	return file_nest_stream_proto_rawDescData
}

var file_nest_stream_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_nest_stream_proto_goTypes = []interface{}{
	(*Cameras)(nil),       // 0: nest_stream.Cameras
	(*Camera)(nil),        // 1: nest_stream.Camera
	(*emptypb.Empty)(nil), // 2: google.protobuf.Empty
}
var file_nest_stream_proto_depIdxs = []int32{
	1, // 0: nest_stream.Cameras.devices:type_name -> nest_stream.Camera
	2, // 1: nest_stream.CameraService.ListCameras:input_type -> google.protobuf.Empty
	1, // 2: nest_stream.CameraService.UpdateCamera:input_type -> nest_stream.Camera
	0, // 3: nest_stream.CameraService.ListCameras:output_type -> nest_stream.Cameras
	1, // 4: nest_stream.CameraService.UpdateCamera:output_type -> nest_stream.Camera
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_nest_stream_proto_init() }
func file_nest_stream_proto_init() {
	if File_nest_stream_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_nest_stream_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cameras); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nest_stream_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Camera); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nest_stream_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_nest_stream_proto_goTypes,
		DependencyIndexes: file_nest_stream_proto_depIdxs,
		MessageInfos:      file_nest_stream_proto_msgTypes,
	}.Build()
	File_nest_stream_proto = out.File
	file_nest_stream_proto_rawDesc = nil
	file_nest_stream_proto_goTypes = nil
	file_nest_stream_proto_depIdxs = nil
}
